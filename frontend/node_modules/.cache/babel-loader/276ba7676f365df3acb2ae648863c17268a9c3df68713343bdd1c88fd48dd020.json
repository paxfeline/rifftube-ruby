{"ast":null,"code":"var _jsxFileName = \"/Users/davidnewberry/Documents/test_rails/frontend/src/components/RiffControls/EditControls.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport RiffList from './RiffList.js';\nimport RiffButton from './RiffButton.js';\nimport { setRifferName } from '../../actions'; // this and below are the same file\n\nimport { createTempRiff, togglePlayerMode, setRecorder } from '../../actions/index.js';\n\n/*This component houses all of the riff buttons and the rifflist*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditControls(props) {\n  _s();\n  useEffect(() => {\n    const blurEvent = () => {\n      setTimeout(() => {\n        document.activeElement.blur();\n      }, 100);\n    };\n    window.addEventListener('blur', blurEvent);\n    const keydownEvent = e => {\n      console.log(props.mode);\n      if (e.key === 'r') props.createTempRiff('audio', props.videoID, true);else if (e.key === 't') props.createTempRiff('text', props.videoID);else if (props.mode === EDIT_MODE || props.mode === EDIT_NEW_MODE) return;else if (e.key === 'j' || e.key === 'ArrowLeft' || e.key === 'Left')\n        // I actually took MS specific BS into account\n        window.rifftubePlayer.seekTo(Math.max(window.rifftubePlayer.getCurrentTime() - 5, 0), true);else if (e.key === 'l' || e.key === 'ArrowRight' || e.key === 'Right') window.rifftubePlayer.seekTo(Math.min(window.rifftubePlayer.getCurrentTime() + 5, props.duration), true);else if (e.key === ' ' || e.key === 'k') {\n        props.togglePlayerMode();\n        e.preventDefault();\n      }\n    };\n    window.addEventListener('keydown', keydownEvent);\n    return () => {\n      window.removeEventListener('blur', blurEvent);\n      window.removeEventListener('keydown', keydownEvent);\n    };\n  }, [props]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"control-panel\",\n    children: [\n    // make this into a component?:\n    props.name ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"riffer-name\",\n        children: [\"Riffer Name:\\xA0\", props.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"add-riff-title\",\n        children: \"Add New Riff\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), props.recorder !== null ? /*#__PURE__*/_jsxDEV(RiffButton, {\n        type: \"audio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          var AudioContext = window.AudioContext || window.webkitAudioContext; // Default // Safari and old versions of Chrome\n          var audioContext = new AudioContext();\n          if (navigator.mediaDevices) {\n            navigator.mediaDevices.getUserMedia({\n              audio: true,\n              video: false\n            }).then(stream => {\n              // gum (get user media)\n              var input = audioContext.createMediaStreamSource(stream);\n              var recorder = new window.WebAudioRecorder(input, {\n                workerDir: '/lib/',\n                encoding: 'mp3',\n                onEncoderLoading: (recorder, encoding) => {\n                  // show \"loading encoder...\" display\n                  console.log('Loading ' + encoding + ' encoder...');\n                },\n                onEncoderLoaded: (recorder, encoding) => {\n                  // hide \"loading encoder...\" display\n                  console.log(encoding + ' encoder loaded');\n                }\n              });\n              props.setRecorder(recorder);\n            }).catch(function (err) {\n              //enable the record button if getUSerMedia() fails\n              console.log(\"oops, can't get stream\", err);\n            });\n          }\n        },\n        children: \"Click to allow recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(RiffButton, {\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), props.mode === EDIT_MODE || props.mode === EDIT_NEW_MODE ? /*#__PURE__*/_jsxDEV(EditRiff, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"riff-list-title\",\n      children: \"Control Panel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RiffList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(EditControls, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = EditControls;\nlet mapStateToProps = state => ({\n  mode: state.mode,\n  name: state.name,\n  videoID: state.videoID,\n  duration: state.duration,\n  recorder: state.recorder\n});\nconst mapDispatchToProps = {\n  setRifferName,\n  createTempRiff,\n  togglePlayerMode,\n  setRecorder\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditControls);\nvar _c;\n$RefreshReg$(_c, \"EditControls\");","map":{"version":3,"names":["React","useEffect","connect","RiffList","RiffButton","setRifferName","createTempRiff","togglePlayerMode","setRecorder","EditControls","props","blurEvent","setTimeout","document","activeElement","blur","window","addEventListener","keydownEvent","e","console","log","mode","key","videoID","EDIT_MODE","EDIT_NEW_MODE","rifftubePlayer","seekTo","Math","max","getCurrentTime","min","duration","preventDefault","removeEventListener","name","recorder","AudioContext","webkitAudioContext","audioContext","navigator","mediaDevices","getUserMedia","audio","video","then","stream","input","createMediaStreamSource","WebAudioRecorder","workerDir","encoding","onEncoderLoading","onEncoderLoaded","catch","err","mapStateToProps","state","mapDispatchToProps"],"sources":["/Users/davidnewberry/Documents/test_rails/frontend/src/components/RiffControls/EditControls.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport RiffList from './RiffList.js';\nimport RiffButton from './RiffButton.js';\nimport { setRifferName } from '../../actions'; // this and below are the same file\n\nimport { createTempRiff, togglePlayerMode, setRecorder } from '../../actions/index.js';\n\n/*This component houses all of the riff buttons and the rifflist*/\nfunction EditControls(props) {\n  useEffect(() => {\n    const blurEvent = () => {\n      setTimeout(() => {\n        document.activeElement.blur();\n      }, 100);\n    };\n    window.addEventListener('blur', blurEvent);\n    const keydownEvent = (e) => {\n      console.log(props.mode);\n\n      if (e.key === 'r') props.createTempRiff('audio', props.videoID, true);\n      else if (e.key === 't') props.createTempRiff('text', props.videoID);\n      else if (props.mode === EDIT_MODE || props.mode === EDIT_NEW_MODE) return;\n      else if (e.key === 'j' || e.key === 'ArrowLeft' || e.key === 'Left')\n        // I actually took MS specific BS into account\n        window.rifftubePlayer.seekTo(\n          Math.max(window.rifftubePlayer.getCurrentTime() - 5, 0),\n          true\n        );\n      else if (e.key === 'l' || e.key === 'ArrowRight' || e.key === 'Right')\n        window.rifftubePlayer.seekTo(\n          Math.min(window.rifftubePlayer.getCurrentTime() + 5, props.duration),\n          true\n        );\n      else if (e.key === ' ' || e.key === 'k') {\n        props.togglePlayerMode();\n        e.preventDefault();\n      }\n    };\n    window.addEventListener('keydown', keydownEvent);\n\n    return () => {\n      window.removeEventListener('blur', blurEvent);\n      window.removeEventListener('keydown', keydownEvent);\n    };\n  }, [props]);\n\n  return (\n    <div className=\"control-panel\">\n      {\n        // make this into a component?:\n        props.name ? (\n          <React.Fragment>\n            <div className=\"riffer-name\">\n              Riffer Name:&nbsp;\n              {props.name}\n            </div>\n          </React.Fragment>\n        ) : null\n      }\n\n      {/* to add back later <Collaboration /> */}\n\n      <div>\n        <h2 className=\"add-riff-title\">Add New Riff</h2>\n        {\n          props.recorder !== null ?\n            <RiffButton type=\"audio\" />\n          :\n            <button onClick={() => {\n              var AudioContext =\n                window.AudioContext || window.webkitAudioContext; // Default // Safari and old versions of Chrome\n              var audioContext = new AudioContext();\n              if (navigator.mediaDevices) {\n                navigator.mediaDevices\n                  .getUserMedia({ audio: true, video: false })\n                  .then((stream) => {\n                    // gum (get user media)\n                    var input = audioContext.createMediaStreamSource(stream);\n                \n                    var recorder = new window.WebAudioRecorder(input, {\n                      workerDir: '/lib/',\n                      encoding: 'mp3',\n                      onEncoderLoading: (recorder, encoding) => {\n                        // show \"loading encoder...\" display\n                        console.log('Loading ' + encoding + ' encoder...');\n                      },\n                      onEncoderLoaded: (recorder, encoding) => {\n                        // hide \"loading encoder...\" display\n                        console.log(encoding + ' encoder loaded');\n                      },\n                    });\n                    props.setRecorder(recorder);\n                  })\n                  .catch(function (err) {\n                    //enable the record button if getUSerMedia() fails\n                    console.log(\"oops, can't get stream\", err);\n                  });\n              }\n            }}>\n              Click to allow recording\n            </button>\n        }\n        <RiffButton type=\"text\" />\n\n        {props.mode === EDIT_MODE || props.mode === EDIT_NEW_MODE ? (\n          <EditRiff />\n        ) : null}\n      </div>\n      <h2 className=\"riff-list-title\">Control Panel</h2>\n      <RiffList />\n    </div>\n  );\n}\n\nlet mapStateToProps = (state) => ({\n  mode: state.mode,\n  name: state.name,\n  videoID: state.videoID,\n  duration: state.duration,\n  recorder: state.recorder,\n});\n\nconst mapDispatchToProps = {\n  setRifferName,\n  createTempRiff,\n  togglePlayerMode,\n  setRecorder,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditControls);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}