{"ast":null,"code":"import { RECEIVE_RIFF_META } from '../actions/index.js';\nlet initialState = [];\nconst riffsMetaReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case RECEIVE_RIFF_META:\n      return action.payload.map(el => ({\n        ...el,\n        time: el.start_time,\n        payload: el.isText ? el.text : null,\n        type: el.isText ? 'text' : 'audio'\n      }));\n    default:\n      return state;\n  }\n};\nexport default riffsMetaReducer;","map":{"version":3,"names":["RECEIVE_RIFF_META","initialState","riffsMetaReducer","state","action","type","payload","map","el","time","start_time","isText","text"],"sources":["/Users/davidnewberry/Documents/test_rails/frontend/src/reducers/riffsMeta-reducer.js"],"sourcesContent":["import { RECEIVE_RIFF_META } from '../actions/index.js';\n\nlet initialState = [];\n\nconst riffsMetaReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case RECEIVE_RIFF_META:\n      return action.payload.map((el) => ({\n        ...el,\n        time: el.start_time,\n        payload: el.isText ? el.text : null,\n        type: el.isText ? 'text' : 'audio',\n      }));\n    default:\n      return state;\n  }\n};\n\nexport default riffsMetaReducer;\n"],"mappings":"AAAA,SAASA,iBAAiB,QAAQ,qBAAqB;AAEvD,IAAIC,YAAY,GAAG,EAAE;AAErB,MAAMC,gBAAgB,GAAG,YAAkC;EAAA,IAAjCC,KAAK,uEAAGF,YAAY;EAAA,IAAEG,MAAM;EACpD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKL,iBAAiB;MACpB,OAAOI,MAAM,CAACE,OAAO,CAACC,GAAG,CAAEC,EAAE,KAAM;QACjC,GAAGA,EAAE;QACLC,IAAI,EAAED,EAAE,CAACE,UAAU;QACnBJ,OAAO,EAAEE,EAAE,CAACG,MAAM,GAAGH,EAAE,CAACI,IAAI,GAAG,IAAI;QACnCP,IAAI,EAAEG,EAAE,CAACG,MAAM,GAAG,MAAM,GAAG;MAC7B,CAAC,CAAC,CAAC;IACL;MACE,OAAOR,KAAK;EAAC;AAEnB,CAAC;AAED,eAAeD,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}