{"ast":null,"code":"var _jsxFileName = \"/Users/davidnewberry/Documents/test_rails/frontend/src/components/ViewInterface/ViewInterface.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport AuthorSelector from './AuthorSelector';\nimport { setVideoID, getViewRiffs } from '../../actions';\nimport NavBar from '../NavBar.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst queryString = require('query-string');\nclass ViewInterface extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.componentDidMount = () => {\n      this.props.setVideoID(this.props.match.params.videoID);\n\n      // this was redundant, and caused an error?\n      // because setVideoID was updated to also call the same endpoint?\n      //this.props.getViewRiffs(this.props.match.params.videoID);\n    };\n    this.render = () => {\n      const parsed = queryString.parse(this.props.location.search);\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(NavBar, {\n          color: \"grey\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '4em'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"View \", this.props.match.params.videoID]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(AuthorSelector, {\n            duration: this.props.duration,\n            history: this.props.history,\n            videoID: this.props.match.params.videoID,\n            riffers: parsed.solo,\n            riffs: this.props.riffs\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }, this);\n    };\n  }\n}\nconst mapStateToProps = state => ({\n  riffs: state.riffs.all,\n  duration: state.duration\n});\nconst mapDispatchToProps = {\n  setVideoID,\n  getViewRiffs\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewInterface);","map":{"version":3,"names":["React","connect","AuthorSelector","setVideoID","getViewRiffs","NavBar","queryString","require","ViewInterface","Component","componentDidMount","props","match","params","videoID","render","parsed","parse","location","search","marginTop","duration","history","solo","riffs","mapStateToProps","state","all","mapDispatchToProps"],"sources":["/Users/davidnewberry/Documents/test_rails/frontend/src/components/ViewInterface/ViewInterface.js"],"sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport AuthorSelector from './AuthorSelector';\nimport { setVideoID, getViewRiffs } from '../../actions';\nimport NavBar from '../NavBar.js';\n\nconst queryString = require('query-string');\n\nclass ViewInterface extends React.Component {\n  componentDidMount = () => {\n    this.props.setVideoID(this.props.match.params.videoID);\n\n    // this was redundant, and caused an error?\n    // because setVideoID was updated to also call the same endpoint?\n    //this.props.getViewRiffs(this.props.match.params.videoID);\n  };\n\n  render = () => {\n    const parsed = queryString.parse(this.props.location.search);\n\n    return (\n      <React.Fragment>\n        <NavBar color=\"grey\" />\n        <div style={{ marginTop: '4em' }}>\n          <h1>View {this.props.match.params.videoID}</h1>\n          <AuthorSelector\n            duration={this.props.duration}\n            history={this.props.history}\n            videoID={this.props.match.params.videoID}\n            riffers={parsed.solo}\n            riffs={this.props.riffs}\n          />\n        </div>\n      </React.Fragment>\n    );\n  };\n}\n\nconst mapStateToProps = (state) => ({\n  riffs: state.riffs.all,\n  duration: state.duration,\n});\n\nconst mapDispatchToProps = {\n  setVideoID,\n  getViewRiffs,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewInterface);\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,aAAa;AACrC,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,SAASC,UAAU,EAAEC,YAAY,QAAQ,eAAe;AACxD,OAAOC,MAAM,MAAM,cAAc;AAAC;AAElC,MAAMC,WAAW,GAAGC,OAAO,CAAC,cAAc,CAAC;AAE3C,MAAMC,aAAa,SAASR,KAAK,CAACS,SAAS,CAAC;EAAA;IAAA;IAAA,KAC1CC,iBAAiB,GAAG,MAAM;MACxB,IAAI,CAACC,KAAK,CAACR,UAAU,CAAC,IAAI,CAACQ,KAAK,CAACC,KAAK,CAACC,MAAM,CAACC,OAAO,CAAC;;MAEtD;MACA;MACA;IACF,CAAC;IAAA,KAEDC,MAAM,GAAG,MAAM;MACb,MAAMC,MAAM,GAAGV,WAAW,CAACW,KAAK,CAAC,IAAI,CAACN,KAAK,CAACO,QAAQ,CAACC,MAAM,CAAC;MAE5D,oBACE,QAAC,KAAK,CAAC,QAAQ;QAAA,wBACb,QAAC,MAAM;UAAC,KAAK,EAAC;QAAM;UAAA;UAAA;UAAA;QAAA,QAAG,eACvB;UAAK,KAAK,EAAE;YAAEC,SAAS,EAAE;UAAM,CAAE;UAAA,wBAC/B;YAAA,WAAI,OAAK,EAAC,IAAI,CAACT,KAAK,CAACC,KAAK,CAACC,MAAM,CAACC,OAAO;UAAA;YAAA;YAAA;YAAA;UAAA,QAAM,eAC/C,QAAC,cAAc;YACb,QAAQ,EAAE,IAAI,CAACH,KAAK,CAACU,QAAS;YAC9B,OAAO,EAAE,IAAI,CAACV,KAAK,CAACW,OAAQ;YAC5B,OAAO,EAAE,IAAI,CAACX,KAAK,CAACC,KAAK,CAACC,MAAM,CAACC,OAAQ;YACzC,OAAO,EAAEE,MAAM,CAACO,IAAK;YACrB,KAAK,EAAE,IAAI,CAACZ,KAAK,CAACa;UAAM;YAAA;YAAA;YAAA;UAAA,QACxB;QAAA;UAAA;UAAA;UAAA;QAAA,QACE;MAAA;QAAA;QAAA;QAAA;MAAA,QACS;IAErB,CAAC;EAAA;AACH;AAEA,MAAMC,eAAe,GAAIC,KAAK,KAAM;EAClCF,KAAK,EAAEE,KAAK,CAACF,KAAK,CAACG,GAAG;EACtBN,QAAQ,EAAEK,KAAK,CAACL;AAClB,CAAC,CAAC;AAEF,MAAMO,kBAAkB,GAAG;EACzBzB,UAAU;EACVC;AACF,CAAC;AAED,eAAeH,OAAO,CAACwB,eAAe,EAAEG,kBAAkB,CAAC,CAACpB,aAAa,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}