{"ast":null,"code":"var _jsxFileName = \"/Users/davidnewberry/Documents/test_rails/frontend/src/components/RiffControls/EditControls.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport RiffList from './RiffList.js';\nimport RiffButton from './RiffButton.js';\nimport Login from '../Login/Login';\nimport { setRifferName, createTempRiff, togglePlayerMode, setRecorder, saveNewRiff, saveEditRiff } from '../../actions/index.js';\nimport { executeScriptElements } from './util.js';\n\n/*This component houses all of the riff buttons and the rifflist*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditControls(props) {\n  _s();\n  var _props$userInfo;\n  let templateRef = React.useRef(null);\n  function startNewRiff(immediateRecord) {\n    let td = templateRef.current.content.firstChild.cloneNode(true);\n    if (immediateRecord) td.setAttribute(\"data-immediate-record\", \"true\");\n    document.body.append(td);\n  }\n  function keydown(e) {\n    console.log('kd meta count', e.getModifierState(\"Control\") + e.getModifierState(\"Alt\") + e.getModifierState(\"Meta\"));\n    if (e.getModifierState(\"Control\") + e.getModifierState(\"Alt\") + e.getModifierState(\"Meta\") > 0) return;\n    if (e.key == 'r' || e.key == 't') {\n      startNewRiff(e.key == 'r'); // immediate record if pressing r but not t\n      //e.stopPropagation();\n    }\n  }\n\n  function saveRiff(_ref) {\n    let {\n      detail\n    } = _ref;\n    // detail is FormData\n\n    console.log(\"sr\", detail);\n    if (detail.id) {\n      props.saveEditRiff(detail);\n    } else {\n      props.saveNewRiff(detail);\n    }\n  }\n  useEffect(() => {\n    document.addEventListener('rifftube:riff:save', saveRiff, false);\n    document.addEventListener('keydown', keydown, false);\n    return () => {\n      document.removeEventListener('rifftube:riff:save', saveRiff, false);\n      document.removeEventListener('keydown', keydown, false);\n    };\n  }, []);\n  useEffect(() => {\n    if (props.loggedIn) {\n      fetch(`/riffs/new?video_id=${props.videoID}`).then(response => response.text()).then(text => {\n        let el = templateRef.current;\n        el.innerHTML = text;\n        executeScriptElements(el.content);\n      });\n    }\n  }, [props.videoID, props.loggedIn]);\n\n  /*\n  const blurEvent = () =>\n  {\n    setTimeout(() => {\n      document.activeElement.blur();\n    }, 100);\n  };\n  window.addEventListener('blur', blurEvent);\n  const keydownEvent = (e) => {\n    console.log(props.mode);\n     if (e.key === 'r') props.createTempRiff('audio', props.videoID, true);\n    else if (e.key === 't') props.createTempRiff('text', props.videoID);\n    else if (props.mode === EDIT_MODE || props.mode === EDIT_NEW_MODE) return;\n    else if (e.key === 'j' || e.key === 'ArrowLeft' || e.key === 'Left')\n      // I actually took MS specific BS into account\n      window.rifftubePlayer.seekTo(\n        Math.max(window.rifftubePlayer.getCurrentTime() - 5, 0),\n        true\n      );\n    else if (e.key === 'l' || e.key === 'ArrowRight' || e.key === 'Right')\n      window.rifftubePlayer.seekTo(\n        Math.min(window.rifftubePlayer.getCurrentTime() + 5, props.duration),\n        true\n      );\n    else if (e.key === ' ' || e.key === 'k') {\n      props.togglePlayerMode();\n      e.preventDefault();\n    }\n  };\n  window.addEventListener('keydown', keydownEvent);\n   return () => {\n    window.removeEventListener('blur', blurEvent);\n    window.removeEventListener('keydown', keydownEvent);\n  };\n  }, [props]);\n  */\n\n  console.log(\"ec props\", props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"control-panel\",\n    children: props.loggedIn ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [(_props$userInfo = props.userInfo) !== null && _props$userInfo !== void 0 && _props$userInfo.name ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"riffer-name\",\n        children: [\"Riffer Name:\\xA0\", props.userInfo.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }, this) : null\n\n      /* to add back later <Collaboration /> */, /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"add-riff-title\",\n          children: \"Add New Riff\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 19\n        }, this), props.recorder !== null ? /*#__PURE__*/_jsxDEV(RiffButton, {\n          type: \"audio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 23\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            var AudioContext = window.AudioContext || window.webkitAudioContext; // Default // Safari and old versions of Chrome\n            var audioContext = new AudioContext();\n            if (navigator.mediaDevices) {\n              navigator.mediaDevices.getUserMedia({\n                audio: true,\n                video: false\n              }).then(stream => {\n                // gum (get user media)\n                var input = audioContext.createMediaStreamSource(stream);\n                var recorder = new window.WebAudioRecorder(input, {\n                  workerDir: '/lib/',\n                  encoding: 'mp3',\n                  onEncoderLoading: (recorder, encoding) => {\n                    // show \"loading encoder...\" display\n                    console.log('Loading ' + encoding + ' encoder...');\n                  },\n                  onEncoderLoaded: (recorder, encoding) => {\n                    // hide \"loading encoder...\" display\n                    console.log(encoding + ' encoder loaded');\n                  }\n                });\n                props.setRecorder(recorder);\n              }).catch(function (err) {\n                //enable the record button if getUSerMedia() fails\n                console.log(\"oops, can't get stream\", err);\n              });\n            }\n          },\n          children: \"Click to allow recording\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(RiffButton, {\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(RiffList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"template\", {\n        ref: templateRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 15\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"add-riff-title\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"to get started\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 9\n  }, this);\n}\n_s(EditControls, \"iYOHV523g76NyW9LYMVau00k6KA=\");\n_c = EditControls;\nlet mapStateToProps = state => ({\n  mode: state.mode,\n  userInfo: state.userInfo,\n  videoID: state.videoID,\n  duration: state.duration,\n  recorder: state.recorder,\n  loggedIn: state.loggedIn\n});\nconst mapDispatchToProps = {\n  setRifferName,\n  createTempRiff,\n  togglePlayerMode,\n  setRecorder,\n  saveNewRiff,\n  saveEditRiff\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditControls);\nvar _c;\n$RefreshReg$(_c, \"EditControls\");","map":{"version":3,"names":["React","useEffect","connect","RiffList","RiffButton","Login","setRifferName","createTempRiff","togglePlayerMode","setRecorder","saveNewRiff","saveEditRiff","executeScriptElements","EditControls","props","templateRef","useRef","startNewRiff","immediateRecord","td","current","content","firstChild","cloneNode","setAttribute","document","body","append","keydown","e","console","log","getModifierState","key","saveRiff","detail","id","addEventListener","removeEventListener","loggedIn","fetch","videoID","then","response","text","el","innerHTML","userInfo","name","recorder","AudioContext","window","webkitAudioContext","audioContext","navigator","mediaDevices","getUserMedia","audio","video","stream","input","createMediaStreamSource","WebAudioRecorder","workerDir","encoding","onEncoderLoading","onEncoderLoaded","catch","err","mapStateToProps","state","mode","duration","mapDispatchToProps"],"sources":["/Users/davidnewberry/Documents/test_rails/frontend/src/components/RiffControls/EditControls.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport RiffList from './RiffList.js';\nimport RiffButton from './RiffButton.js';\nimport Login from '../Login/Login';\n\nimport { setRifferName, createTempRiff, togglePlayerMode, setRecorder,\n  saveNewRiff, saveEditRiff } from '../../actions/index.js';\n\nimport { executeScriptElements } from './util.js';\n\n/*This component houses all of the riff buttons and the rifflist*/\nfunction EditControls(props)\n{\n  let templateRef = React.useRef(null);\n\n  function startNewRiff(immediateRecord)\n  {\n    let td = templateRef.current.content.firstChild.cloneNode(true);\n    if (immediateRecord)\n      td.setAttribute(\"data-immediate-record\", \"true\");\n    document.body.append(td);\n  }\n\n  function keydown(e)\n  {\n    console.log('kd meta count', e.getModifierState(\"Control\") +\n      e.getModifierState(\"Alt\") +\n      e.getModifierState(\"Meta\"));\n\n    if ( e.getModifierState(\"Control\") +\n            e.getModifierState(\"Alt\") +\n            e.getModifierState(\"Meta\") > 0 )\n        return;\n\n    if (e.key == 'r' || e.key == 't')\n    {\n      startNewRiff(e.key == 'r'); // immediate record if pressing r but not t\n      //e.stopPropagation();\n    }\n  }\n\n  function saveRiff({ detail })\n  {\n    // detail is FormData\n\n    console.log( \"sr\", detail );\n    \n    if ( detail.id )\n    {\n      props.saveEditRiff(detail);\n    }\n    else\n    {\n      props.saveNewRiff(detail);\n    }\n\n  }\n  \n  useEffect(() =>\n  {\n        document.addEventListener('rifftube:riff:save', saveRiff, false);\n        document.addEventListener('keydown', keydown, false);\n\n        return () =>\n        {\n          document.removeEventListener('rifftube:riff:save', saveRiff, false);\n          document.removeEventListener('keydown', keydown, false);\n        }\n  }, []);\n  \n  useEffect(() =>\n  {\n    if (props.loggedIn)\n    {\n      fetch(`/riffs/new?video_id=${props.videoID}`)\n        .then(response => response.text())\n        .then(text =>\n          {\n            let el = templateRef.current;\n            el.innerHTML = text;\n            executeScriptElements(el.content);\n          });\n    }\n  }, [props.videoID, props.loggedIn]);\n\n\n    /*\n    const blurEvent = () =>\n    {\n      setTimeout(() => {\n        document.activeElement.blur();\n      }, 100);\n    };\n    window.addEventListener('blur', blurEvent);\n    const keydownEvent = (e) => {\n      console.log(props.mode);\n\n      if (e.key === 'r') props.createTempRiff('audio', props.videoID, true);\n      else if (e.key === 't') props.createTempRiff('text', props.videoID);\n      else if (props.mode === EDIT_MODE || props.mode === EDIT_NEW_MODE) return;\n      else if (e.key === 'j' || e.key === 'ArrowLeft' || e.key === 'Left')\n        // I actually took MS specific BS into account\n        window.rifftubePlayer.seekTo(\n          Math.max(window.rifftubePlayer.getCurrentTime() - 5, 0),\n          true\n        );\n      else if (e.key === 'l' || e.key === 'ArrowRight' || e.key === 'Right')\n        window.rifftubePlayer.seekTo(\n          Math.min(window.rifftubePlayer.getCurrentTime() + 5, props.duration),\n          true\n        );\n      else if (e.key === ' ' || e.key === 'k') {\n        props.togglePlayerMode();\n        e.preventDefault();\n      }\n    };\n    window.addEventListener('keydown', keydownEvent);\n\n    return () => {\n      window.removeEventListener('blur', blurEvent);\n      window.removeEventListener('keydown', keydownEvent);\n    };\n  }, [props]);\n  */\n\n  console.log(\"ec props\", props);\n\n  return (\n        <div className=\"control-panel\">\n          {\n            props.loggedIn ?\n            (\n              <React.Fragment>\n                {\n                  props.userInfo?.name ?\n                  (\n                    <div className=\"riffer-name\">\n                      Riffer Name:&nbsp;\n                      {props.userInfo.name}\n                    </div>\n                  ) : null\n\n                  /* to add back later <Collaboration /> */\n                }\n                <div>\n                  <h2 className=\"add-riff-title\">Add New Riff</h2>\n                  {\n                    props.recorder !== null ?\n                      <RiffButton type=\"audio\" />\n                    :\n                      <button onClick={() => {\n                        var AudioContext =\n                          window.AudioContext || window.webkitAudioContext; // Default // Safari and old versions of Chrome\n                        var audioContext = new AudioContext();\n                        if (navigator.mediaDevices) {\n                          navigator.mediaDevices\n                            .getUserMedia({ audio: true, video: false })\n                            .then((stream) => {\n                              // gum (get user media)\n                              var input = audioContext.createMediaStreamSource(stream);\n                          \n                              var recorder = new window.WebAudioRecorder(input, {\n                                workerDir: '/lib/',\n                                encoding: 'mp3',\n                                onEncoderLoading: (recorder, encoding) => {\n                                  // show \"loading encoder...\" display\n                                  console.log('Loading ' + encoding + ' encoder...');\n                                },\n                                onEncoderLoaded: (recorder, encoding) => {\n                                  // hide \"loading encoder...\" display\n                                  console.log(encoding + ' encoder loaded');\n                                },\n                              });\n                              props.setRecorder(recorder);\n                            })\n                            .catch(function (err) {\n                              //enable the record button if getUSerMedia() fails\n                              console.log(\"oops, can't get stream\", err);\n                            });\n                        }\n                      }}>\n                        Click to allow recording\n                      </button>\n                  }\n                  <RiffButton type=\"text\" />\n\n                </div>\n                <RiffList />\n                <template ref={templateRef}></template>\n              </React.Fragment>\n            ) : \n              <div>\n                <h2 className=\"add-riff-title\">Sign In</h2>\n                <Login /> <p>to get started</p>\n              </div>\n          }\n        </div>\n  );\n}\n\nlet mapStateToProps = (state) => ({\n  mode: state.mode,\n  userInfo: state.userInfo,\n  videoID: state.videoID,\n  duration: state.duration,\n  recorder: state.recorder,\n  loggedIn: state.loggedIn,\n});\n\nconst mapDispatchToProps = {\n  setRifferName,\n  createTempRiff,\n  togglePlayerMode,\n  setRecorder,\n  saveNewRiff,\n  saveEditRiff,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditControls);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}