{"ast":null,"code":"import { SET_VIDEO_ID, EDIT_RIFF, SAVE_NEW_RIFF_SUCCESS, SAVE_NEW_RIFF, SAVE_EDIT_RIFF, CREATE_TEMP_AUDIO_RIFF, CREATE_TEMP_TEXT_RIFF, RIFF_LOADED, SAVE_TEMP_AUDIO, CANCEL_EDIT, LOAD_RIFF } from '../actions/index.js';\nlet initialState = {\n  loading: {},\n  all: {}\n};\nconst riffsAudioReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case EDIT_RIFF:\n      return {\n        ...state,\n        temp: state[action.id] // copy specified riff audio to temp\n      };\n\n    case SAVE_NEW_RIFF_SUCCESS:\n      {\n        return {\n          ...state,\n          all: {\n            ...state,\n            [action.payload.id]: state.temp\n          }\n        };\n      }\n    case SAVE_NEW_RIFF:\n      {\n        // adding a new riff:\n        return {\n          ...state,\n          saving: {\n            ...state.saving,\n            [action.riff.tempId]: true\n          },\n          editIndex: null\n        };\n      }\n    case SAVE_EDIT_RIFF:\n      {\n        // edit riff:\n        return {\n          ...state,\n          all: {\n            ...state,\n            [action.riff.id]: action.payload.payload\n          },\n          editIndex: null,\n          temp: null\n        };\n      }\n    case LOAD_RIFF:\n      {\n        return {\n          ...state,\n          // add [this riff's id]: true to state.loading object\n          loading: {\n            ...state.loading,\n            [action.payload]: true\n          }\n        };\n      }\n    case RIFF_LOADED:\n      {\n        // unpack state.loading object, delete the entry for the loaded riff's id\n        const loading = [...state.loading];\n        delete loading[action.id];\n        // create blob for audio and add to state\n        //debugger;\n        const audio = new Blob(new Array(action.payload), {\n          type: 'audio/mp3'\n        });\n        return {\n          ...state,\n          loading,\n          all: {\n            ...state,\n            [action.id]: audio\n          },\n          temp: state.editIndex === null ? null : audio\n        };\n      }\n    case CANCEL_EDIT:\n      return {\n        ...state,\n        temp: null,\n        editIndex: null\n      };\n    default:\n      return state;\n  }\n};\nexport default riffsAudioReducer;","map":{"version":3,"names":["SET_VIDEO_ID","EDIT_RIFF","SAVE_NEW_RIFF_SUCCESS","SAVE_NEW_RIFF","SAVE_EDIT_RIFF","CREATE_TEMP_AUDIO_RIFF","CREATE_TEMP_TEXT_RIFF","RIFF_LOADED","SAVE_TEMP_AUDIO","CANCEL_EDIT","LOAD_RIFF","initialState","loading","all","riffsAudioReducer","state","action","type","temp","id","payload","saving","riff","tempId","editIndex","audio","Blob","Array"],"sources":["/Users/davidnewberry/Documents/test_rails/frontend/src/reducers/riffsAudio-reducer.js"],"sourcesContent":["import {\n  SET_VIDEO_ID,\n  EDIT_RIFF,\n  SAVE_NEW_RIFF_SUCCESS,\n  SAVE_NEW_RIFF,\n  SAVE_EDIT_RIFF,\n  CREATE_TEMP_AUDIO_RIFF,\n  CREATE_TEMP_TEXT_RIFF,\n  RIFF_LOADED,\n  SAVE_TEMP_AUDIO,\n  CANCEL_EDIT,\n  LOAD_RIFF,\n} from '../actions/index.js';\n\nlet initialState = { loading: {}, all: {} };\n\nconst riffsAudioReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case EDIT_RIFF:\n      return {\n        ...state,\n        temp: state[action.id], // copy specified riff audio to temp\n      };\n    case SAVE_NEW_RIFF_SUCCESS: {\n      return {\n        ...state,\n        all: {\n          ...state,\n          [action.payload.id]: state.temp,\n        },\n      };\n    }\n    case SAVE_NEW_RIFF: {\n      // adding a new riff:\n      return {\n        ...state,\n        saving: {\n          ...state.saving,\n          [action.riff.tempId]: true,\n        },\n        editIndex: null,\n      };\n    }\n    case SAVE_EDIT_RIFF: {\n      // edit riff:\n      return {\n        ...state,\n        all: {\n          ...state,\n          [action.riff.id]: action.payload.payload,\n        },\n        editIndex: null,\n        temp: null,\n      };\n    }\n    case LOAD_RIFF: \n    {\n      return {\n        ...state,\n        // add [this riff's id]: true to state.loading object\n        loading: {\n          ...state.loading,\n          [action.payload]: true,\n        },\n      };\n    }\n    case RIFF_LOADED:\n    {\n      // unpack state.loading object, delete the entry for the loaded riff's id\n      const loading = [...state.loading];\n      delete loading[action.id]\n      // create blob for audio and add to state\n      //debugger;\n      const audio = new Blob(new Array(action.payload), {\n            type: 'audio/mp3',\n          });\n      return {\n        ...state,\n        loading,\n        all: {\n          ...state,\n          [action.id]: audio\n        },\n        temp: state.editIndex === null ? null : audio,\n      };\n    }\n    case CANCEL_EDIT:\n      return {\n        ...state,\n        temp: null,\n        editIndex: null,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default riffsAudioReducer;\n"],"mappings":"AAAA,SACEA,YAAY,EACZC,SAAS,EACTC,qBAAqB,EACrBC,aAAa,EACbC,cAAc,EACdC,sBAAsB,EACtBC,qBAAqB,EACrBC,WAAW,EACXC,eAAe,EACfC,WAAW,EACXC,SAAS,QACJ,qBAAqB;AAE5B,IAAIC,YAAY,GAAG;EAAEC,OAAO,EAAE,CAAC,CAAC;EAAEC,GAAG,EAAE,CAAC;AAAE,CAAC;AAE3C,MAAMC,iBAAiB,GAAG,YAAkC;EAAA,IAAjCC,KAAK,uEAAGJ,YAAY;EAAA,IAAEK,MAAM;EACrD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKhB,SAAS;MACZ,OAAO;QACL,GAAGc,KAAK;QACRG,IAAI,EAAEH,KAAK,CAACC,MAAM,CAACG,EAAE,CAAC,CAAE;MAC1B,CAAC;;IACH,KAAKjB,qBAAqB;MAAE;QAC1B,OAAO;UACL,GAAGa,KAAK;UACRF,GAAG,EAAE;YACH,GAAGE,KAAK;YACR,CAACC,MAAM,CAACI,OAAO,CAACD,EAAE,GAAGJ,KAAK,CAACG;UAC7B;QACF,CAAC;MACH;IACA,KAAKf,aAAa;MAAE;QAClB;QACA,OAAO;UACL,GAAGY,KAAK;UACRM,MAAM,EAAE;YACN,GAAGN,KAAK,CAACM,MAAM;YACf,CAACL,MAAM,CAACM,IAAI,CAACC,MAAM,GAAG;UACxB,CAAC;UACDC,SAAS,EAAE;QACb,CAAC;MACH;IACA,KAAKpB,cAAc;MAAE;QACnB;QACA,OAAO;UACL,GAAGW,KAAK;UACRF,GAAG,EAAE;YACH,GAAGE,KAAK;YACR,CAACC,MAAM,CAACM,IAAI,CAACH,EAAE,GAAGH,MAAM,CAACI,OAAO,CAACA;UACnC,CAAC;UACDI,SAAS,EAAE,IAAI;UACfN,IAAI,EAAE;QACR,CAAC;MACH;IACA,KAAKR,SAAS;MACd;QACE,OAAO;UACL,GAAGK,KAAK;UACR;UACAH,OAAO,EAAE;YACP,GAAGG,KAAK,CAACH,OAAO;YAChB,CAACI,MAAM,CAACI,OAAO,GAAG;UACpB;QACF,CAAC;MACH;IACA,KAAKb,WAAW;MAChB;QACE;QACA,MAAMK,OAAO,GAAG,CAAC,GAAGG,KAAK,CAACH,OAAO,CAAC;QAClC,OAAOA,OAAO,CAACI,MAAM,CAACG,EAAE,CAAC;QACzB;QACA;QACA,MAAMM,KAAK,GAAG,IAAIC,IAAI,CAAC,IAAIC,KAAK,CAACX,MAAM,CAACI,OAAO,CAAC,EAAE;UAC5CH,IAAI,EAAE;QACR,CAAC,CAAC;QACN,OAAO;UACL,GAAGF,KAAK;UACRH,OAAO;UACPC,GAAG,EAAE;YACH,GAAGE,KAAK;YACR,CAACC,MAAM,CAACG,EAAE,GAAGM;UACf,CAAC;UACDP,IAAI,EAAEH,KAAK,CAACS,SAAS,KAAK,IAAI,GAAG,IAAI,GAAGC;QAC1C,CAAC;MACH;IACA,KAAKhB,WAAW;MACd,OAAO;QACL,GAAGM,KAAK;QACRG,IAAI,EAAE,IAAI;QACVM,SAAS,EAAE;MACb,CAAC;IACH;MACE,OAAOT,KAAK;EAAC;AAEnB,CAAC;AAED,eAAeD,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}