{"ast":null,"code":"var _jsxFileName = \"/Users/davidnewberry/Documents/test_rails/frontend/src/components/RiffControls/EditControls.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport RiffList from './RiffList.js';\nimport RiffButton from './RiffButton.js';\nimport { setRifferName } from '../../actions'; // this and below are the same file\n\nimport { createTempRiff, togglePlayerMode, setRecorder } from '../../actions/index.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction executeScriptElements(containerElement) {\n  console.log(\"reworking scripts\");\n  const scriptElements = containerElement.querySelectorAll(\"script\");\n  Array.from(scriptElements).forEach(scriptElement => {\n    const clonedElement = document.createElement(\"script\");\n    Array.from(scriptElement.attributes).forEach(attribute => {\n      clonedElement.setAttribute(attribute.name, attribute.value);\n    });\n    clonedElement.text = scriptElement.text;\n    console.log(\"rework: \", clonedElement);\n    scriptElement.parentNode.replaceChild(clonedElement, scriptElement);\n  });\n}\n\n/*This component houses all of the riff buttons and the rifflist*/\nfunction EditControls(props) {\n  _s();\n  useEffect(() => {\n    fetch(\"/riffs/new\").then(response => response.text()).then(text => {\n      let el = document.createElement(\"template\");\n      el.innerHTML = text;\n      document.body.appendChild(el);\n      executeScriptElements(el.content);\n    });\n  }, []);\n\n  /*\n  const blurEvent = () =>\n  {\n    setTimeout(() => {\n      document.activeElement.blur();\n    }, 100);\n  };\n  window.addEventListener('blur', blurEvent);\n  const keydownEvent = (e) => {\n    console.log(props.mode);\n     if (e.key === 'r') props.createTempRiff('audio', props.videoID, true);\n    else if (e.key === 't') props.createTempRiff('text', props.videoID);\n    else if (props.mode === EDIT_MODE || props.mode === EDIT_NEW_MODE) return;\n    else if (e.key === 'j' || e.key === 'ArrowLeft' || e.key === 'Left')\n      // I actually took MS specific BS into account\n      window.rifftubePlayer.seekTo(\n        Math.max(window.rifftubePlayer.getCurrentTime() - 5, 0),\n        true\n      );\n    else if (e.key === 'l' || e.key === 'ArrowRight' || e.key === 'Right')\n      window.rifftubePlayer.seekTo(\n        Math.min(window.rifftubePlayer.getCurrentTime() + 5, props.duration),\n        true\n      );\n    else if (e.key === ' ' || e.key === 'k') {\n      props.togglePlayerMode();\n      e.preventDefault();\n    }\n  };\n  window.addEventListener('keydown', keydownEvent);\n   return () => {\n    window.removeEventListener('blur', blurEvent);\n    window.removeEventListener('keydown', keydownEvent);\n  };\n  }, [props]);\n  */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"control-panel\",\n    children: [\n    // make this into a component?:\n    props.name ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"riffer-name\",\n        children: [\"Riffer Name:\\xA0\", props.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"add-riff-title\",\n        children: \"Add New Riff\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), props.recorder !== null ? /*#__PURE__*/_jsxDEV(RiffButton, {\n        type: \"audio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          var AudioContext = window.AudioContext || window.webkitAudioContext; // Default // Safari and old versions of Chrome\n          var audioContext = new AudioContext();\n          if (navigator.mediaDevices) {\n            navigator.mediaDevices.getUserMedia({\n              audio: true,\n              video: false\n            }).then(stream => {\n              // gum (get user media)\n              var input = audioContext.createMediaStreamSource(stream);\n              var recorder = new window.WebAudioRecorder(input, {\n                workerDir: '/lib/',\n                encoding: 'mp3',\n                onEncoderLoading: (recorder, encoding) => {\n                  // show \"loading encoder...\" display\n                  console.log('Loading ' + encoding + ' encoder...');\n                },\n                onEncoderLoaded: (recorder, encoding) => {\n                  // hide \"loading encoder...\" display\n                  console.log(encoding + ' encoder loaded');\n                }\n              });\n              props.setRecorder(recorder);\n            }).catch(function (err) {\n              //enable the record button if getUSerMedia() fails\n              console.log(\"oops, can't get stream\", err);\n            });\n          }\n        },\n        children: \"Click to allow recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(RiffButton, {\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"riff-list-title\",\n      children: \"Control Panel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RiffList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(EditControls, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = EditControls;\nlet mapStateToProps = state => ({\n  mode: state.mode,\n  name: state.name,\n  videoID: state.videoID,\n  duration: state.duration,\n  recorder: state.recorder\n});\nconst mapDispatchToProps = {\n  setRifferName,\n  createTempRiff,\n  togglePlayerMode,\n  setRecorder\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditControls);\nvar _c;\n$RefreshReg$(_c, \"EditControls\");","map":{"version":3,"names":["React","useEffect","connect","RiffList","RiffButton","setRifferName","createTempRiff","togglePlayerMode","setRecorder","executeScriptElements","containerElement","console","log","scriptElements","querySelectorAll","Array","from","forEach","scriptElement","clonedElement","document","createElement","attributes","attribute","setAttribute","name","value","text","parentNode","replaceChild","EditControls","props","fetch","then","response","el","innerHTML","body","appendChild","content","recorder","AudioContext","window","webkitAudioContext","audioContext","navigator","mediaDevices","getUserMedia","audio","video","stream","input","createMediaStreamSource","WebAudioRecorder","workerDir","encoding","onEncoderLoading","onEncoderLoaded","catch","err","mapStateToProps","state","mode","videoID","duration","mapDispatchToProps"],"sources":["/Users/davidnewberry/Documents/test_rails/frontend/src/components/RiffControls/EditControls.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport RiffList from './RiffList.js';\nimport RiffButton from './RiffButton.js';\nimport { setRifferName } from '../../actions'; // this and below are the same file\n\nimport { createTempRiff, togglePlayerMode, setRecorder } from '../../actions/index.js';\n\nfunction executeScriptElements(containerElement)\n{\n  console.log(\"reworking scripts\");\n\n  const scriptElements = containerElement.querySelectorAll(\"script\");\n\n  Array.from(scriptElements).forEach((scriptElement) => {\n    const clonedElement = document.createElement(\"script\");\n\n    Array.from(scriptElement.attributes).forEach((attribute) => {\n      clonedElement.setAttribute(attribute.name, attribute.value);\n    });\n    \n    clonedElement.text = scriptElement.text;\n\n    console.log(\"rework: \", clonedElement);\n\n    scriptElement.parentNode.replaceChild(clonedElement, scriptElement);\n  });\n}\n\n/*This component houses all of the riff buttons and the rifflist*/\nfunction EditControls(props) {\n  useEffect(() =>\n  {\n    fetch(\"/riffs/new\")\n      .then(response => response.text())\n      .then(text =>\n        {\n          let el = document.createElement(\"template\");\n          el.innerHTML = text;\n          document.body.appendChild(el);\n          executeScriptElements(el.content);\n        });\n  }, []);\n\n\n    /*\n    const blurEvent = () =>\n    {\n      setTimeout(() => {\n        document.activeElement.blur();\n      }, 100);\n    };\n    window.addEventListener('blur', blurEvent);\n    const keydownEvent = (e) => {\n      console.log(props.mode);\n\n      if (e.key === 'r') props.createTempRiff('audio', props.videoID, true);\n      else if (e.key === 't') props.createTempRiff('text', props.videoID);\n      else if (props.mode === EDIT_MODE || props.mode === EDIT_NEW_MODE) return;\n      else if (e.key === 'j' || e.key === 'ArrowLeft' || e.key === 'Left')\n        // I actually took MS specific BS into account\n        window.rifftubePlayer.seekTo(\n          Math.max(window.rifftubePlayer.getCurrentTime() - 5, 0),\n          true\n        );\n      else if (e.key === 'l' || e.key === 'ArrowRight' || e.key === 'Right')\n        window.rifftubePlayer.seekTo(\n          Math.min(window.rifftubePlayer.getCurrentTime() + 5, props.duration),\n          true\n        );\n      else if (e.key === ' ' || e.key === 'k') {\n        props.togglePlayerMode();\n        e.preventDefault();\n      }\n    };\n    window.addEventListener('keydown', keydownEvent);\n\n    return () => {\n      window.removeEventListener('blur', blurEvent);\n      window.removeEventListener('keydown', keydownEvent);\n    };\n  }, [props]);\n  */\n\n  return (\n    <div className=\"control-panel\">\n      {\n        // make this into a component?:\n        props.name ? (\n          <React.Fragment>\n            <div className=\"riffer-name\">\n              Riffer Name:&nbsp;\n              {props.name}\n            </div>\n          </React.Fragment>\n        ) : null\n      }\n\n      {/* to add back later <Collaboration /> */}\n\n      <div>\n        <h2 className=\"add-riff-title\">Add New Riff</h2>\n        {\n          props.recorder !== null ?\n            <RiffButton type=\"audio\" />\n          :\n            <button onClick={() => {\n              var AudioContext =\n                window.AudioContext || window.webkitAudioContext; // Default // Safari and old versions of Chrome\n              var audioContext = new AudioContext();\n              if (navigator.mediaDevices) {\n                navigator.mediaDevices\n                  .getUserMedia({ audio: true, video: false })\n                  .then((stream) => {\n                    // gum (get user media)\n                    var input = audioContext.createMediaStreamSource(stream);\n                \n                    var recorder = new window.WebAudioRecorder(input, {\n                      workerDir: '/lib/',\n                      encoding: 'mp3',\n                      onEncoderLoading: (recorder, encoding) => {\n                        // show \"loading encoder...\" display\n                        console.log('Loading ' + encoding + ' encoder...');\n                      },\n                      onEncoderLoaded: (recorder, encoding) => {\n                        // hide \"loading encoder...\" display\n                        console.log(encoding + ' encoder loaded');\n                      },\n                    });\n                    props.setRecorder(recorder);\n                  })\n                  .catch(function (err) {\n                    //enable the record button if getUSerMedia() fails\n                    console.log(\"oops, can't get stream\", err);\n                  });\n              }\n            }}>\n              Click to allow recording\n            </button>\n        }\n        <RiffButton type=\"text\" />\n\n      </div>\n      <h2 className=\"riff-list-title\">Control Panel</h2>\n      <RiffList />\n    </div>\n  );\n}\n\nlet mapStateToProps = (state) => ({\n  mode: state.mode,\n  name: state.name,\n  videoID: state.videoID,\n  duration: state.duration,\n  recorder: state.recorder,\n});\n\nconst mapDispatchToProps = {\n  setRifferName,\n  createTempRiff,\n  togglePlayerMode,\n  setRecorder,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditControls);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}