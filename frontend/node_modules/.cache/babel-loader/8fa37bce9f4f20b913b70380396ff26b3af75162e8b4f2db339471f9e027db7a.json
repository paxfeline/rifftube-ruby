{"ast":null,"code":"import axios from 'axios';\nexport const LOGIN = 'LOGIN';\nexport const LOGOUT = 'LOGOUT';\nexport const CREATE_TEMP_AUDIO_RIFF = 'CREATE_TEMP_AUDIO_RIFF';\nexport const CREATE_TEMP_TEXT_RIFF = 'CREATE_TEMP_TEXT_RIFF';\nexport const EDIT_RIFF = 'EDIT_RIFF';\nexport const CANCEL_EDIT = 'CANCEL_EDIT';\nexport const SAVE_NEW_RIFF = 'SAVE_NEW_RIFF';\nexport const SAVE_NEW_RIFF_SUCCESS = 'SAVE_NEW_RIFF_SUCCESS';\nexport const SAVE_NEW_RIFF_FAILURE = 'SAVE_NEW_RIFF_FAILURE';\nexport const SAVE_EDIT_RIFF = 'SAVE_EDIT_RIFF';\nexport const SAVE_EDIT_RIFF_SUCCESS = 'SAVE_EDIT_RIFF_SUCCESS';\nexport const SAVE_EDIT_RIFF_FAILURE = 'SAVE_EDIT_RIFF_FAILURE';\nexport const UPDATE_RIFF_TIME_SUCCESS = 'UPDATE_RIFF_TIME_SUCCESS';\nexport const DELETE_RIFF = 'DELETE_RIFF';\nexport const SAVE_TEMP_AUDIO = 'SAVE_TEMP_AUDIO';\nexport const SET_RIFF_PLAYING = 'SET_RIFF_PLAYING';\nexport const SET_RIFF_NOT_PLAYING = 'SET_RIFF_NOT_PLAYING';\nexport const LOAD_RIFF = 'LOAD_RIFF';\nexport const RIFF_LOADED = 'RIFF_LOADED';\nexport const SET_PLAYER_MODE = 'SET_PLAYER_MODE';\nexport const EDIT_MODE = 'EDIT_MODE';\nexport const EDIT_NEW_MODE = 'EDIT_NEW_MODE';\nexport const PLAY_MODE = 'PLAY_MODE';\nexport const PAUSE_MODE = 'PAUSE_MODE';\nexport const TOGGLE_PLAYER_MODE = 'TOGGLE_PLAYER_MODE';\nexport const SET_VIDEO_ID = 'SET_VIDEO_ID';\nexport const RECEIVE_NAME_UPDATE = 'RECEIVE_NAME_UPDATE';\nexport const RECEIVE_RIFF_LIST = 'RECEIVE_RIFF_LIST';\nexport const RECEIVE_RIFF_META = 'RECEIVE_RIFF_META';\nexport const TOGGLE_VIEW_USERID_MUTED = 'TOGGLE_VIEW_USERID_MUTED';\nexport const SET_VIEW_USERID_MUTED = 'SET_VIEW_USERID_MUTED';\nexport const RECEIVE_COLLABORATION_ID = 'RECEIVE_COLLABORATION_ID';\nexport const CREATE_PLAYLIST_SUCCESS = 'START_COLLABORATION_SUCCESS';\nexport const CREATE_PLAYLIST_FAILURE = 'START_COLLABORATION_FAILURE';\nexport const SET_VIDEO_DURATION = 'SET_VIDEO_DURATION';\nexport const LOAD_USER_DATA = 'LOAD_USER_DATA';\nexport const LOAD_PUBLIC_USER_DATA = 'LOAD_PUBLIC_USER_DATA';\nexport const LOAD_PUBLIC_USER_NAME = 'LOAD_PUBLIC_USER_NAME';\nexport const LOAD_GLOBAL_VIDEO_LIST = 'LOAD_GLOBAL_VIDEO_LIST';\nexport const SET_IMMEDIATE_OFF = 'SET_IMMEDIATE_OFF';\nexport const SET_IMMEDIATE_ON = 'SET_IMMEDIATE_ON';\nexport const SET_RECORDER = 'SET_RECORDER';\nexport const WEB_SOCKET_UPDATE = 'WEB_SOCKET_UPDATE';\nexport const SAVE_PIC_SUCCESS = 'SAVE_PIC_SUCCESS';\nexport const SAVE_PIC_FAILURE = 'SAVE_PIC_FAILURE';\nexport const SET_ERROR = 'SET_ERROR';\nexport const CLEAR_ERROR = 'CLEAR_ERROR';\n\n/******** Login and logout */\n\nexport const login = (email, password) => {\n  return dispatch => {\n    axios({\n      method: 'post',\n      url: `/login`,\n      data: {\n        email,\n        password\n      }\n    }).then(res => {\n      //debugger;\n      dispatch({\n        type: LOGIN,\n        payload: res.data\n      });\n    }).catch(err => console.log(\"error\", err));\n  };\n};\nexport const loginWithGoogle = credentialResponse => {\n  console.log(credentialResponse);\n  //debugger;\n  return dispatch => {\n    axios({\n      method: 'post',\n      url: `/login-with-google`,\n      data: {\n        credentials: credentialResponse\n      }\n    }).then(res => {\n      console.log(res);\n      dispatch({\n        type: LOGIN,\n        payload: res.data\n      });\n    }).catch(err => console.log(\"error\", err));\n  };\n};\nexport const logout = () => {\n  return dispatch => {\n    axios({\n      method: 'delete',\n      url: `/logout`\n    }).then(res => {\n      //debugger;\n      dispatch({\n        type: LOGOUT,\n        payload: res.data\n      });\n    }).catch(err => console.log(\"error\", err));\n  };\n};\nexport const currentUserStatus = () => {\n  return dispatch => {\n    axios({\n      method: 'get',\n      url: `/user-status`\n    }).then(res => {\n      //debugger;\n      dispatch({\n        type: LOGIN,\n        payload: res.data\n      });\n    }).catch(err => console.log(\"error\", err));\n  };\n};\n\n/********** Saving, editing  */\n\nexport const saveNewRiff = detail => {\n  return dispatch => {\n    dispatch({\n      type: SAVE_EDIT_RIFF,\n      payload: detail.payload,\n      riff: detail\n    });\n    fetch(`/riffs/${detail.id}`, {\n      method: 'PATCH',\n      body: detail\n    }).then(response => response.json()).then(response => dispatch({\n      type: SAVE_EDIT_RIFF_SUCCESS,\n      payload: response.data\n    })).catch(err => dispatch({\n      type: SAVE_EDIT_RIFF_FAILURE,\n      payload: err\n    }));\n  };\n};\nexport const saveEditRiff = detail => {\n  return dispatch => {\n    dispatch({\n      type: SAVE_NEW_RIFF,\n      payload: detail.payload,\n      riff: detail\n    });\n    fetch(`/riffs`, {\n      method: 'POST',\n      body: detail\n    }).then(response => response.json()).then(response => dispatch({\n      type: SAVE_NEW_RIFF_SUCCESS,\n      payload: response.data\n    })).catch(err => dispatch({\n      type: SAVE_NEW_RIFF_FAILURE,\n      payload: err\n    }));\n  };\n};\n\n/******** WebSockets */\n\nexport const setWebSocket = payload => ({\n  type: WEB_SOCKET_UPDATE,\n  payload\n});\n\n/******** Editing Interface */\n\nexport const setVideoDuration = payload => ({\n  type: SET_VIDEO_DURATION,\n  payload\n});\nexport const setRifferName = newName => {\n  return dispatch => {\n    axios({\n      method: 'post',\n      url: `/set-name`,\n      data: {\n        newName\n      }\n    }).then(res => {\n      dispatch({\n        type: RECEIVE_NAME_UPDATE,\n        payload: res.data\n      });\n    }).catch(err => console.log(\"error\", err));\n  };\n};\nexport const setRiffPic = payload => {\n  return dispatch => {\n    let fd = new FormData();\n    fd.append('image', payload);\n    axios({\n      method: 'post',\n      url: `/save-pic`,\n      data: fd,\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(res => {\n      // res.data.data\n      dispatch({\n        type: SAVE_PIC_SUCCESS,\n        payload: res.data\n      }); // fix these to constants\n    }).catch(err => {\n      dispatch({\n        type: SAVE_PIC_FAILURE,\n        payload: err.response\n      });\n    });\n  };\n};\n\n// updated to use get\nexport const getRiffs = videoID => {\n  return dispatch => {\n    axios({\n      method: 'get',\n      url: `/riffs?video_id=${videoID}&user_id=self`\n    }).then(res => {\n      dispatch({\n        type: RECEIVE_RIFF_LIST,\n        payload: res.data\n      });\n    }).catch(err => console.log(\"error\", err));\n    axios({\n      method: 'get',\n      url: `/riffs?video_id=${videoID}`\n    }).then(res => {\n      dispatch({\n        type: RECEIVE_RIFF_META,\n        payload: res.data\n      });\n    }).catch(err => console.log(\"error\", err));\n  };\n};\nexport const setVideoID = videoID => {\n  return dispatch => {\n    dispatch({\n      type: SET_VIDEO_ID,\n      payload: videoID\n    });\n    axios({\n      method: 'get',\n      url: `/riffs?video_id=${videoID}`\n    }).then(res => {\n      dispatch({\n        type: RECEIVE_RIFF_META,\n        payload: res.data\n      });\n    }).catch(error => {\n      dispatch({\n        type: RECEIVE_RIFF_META,\n        payload: []\n      });\n    });\n    axios({\n      method: 'get',\n      url: `/riffs?video_id=${videoID}&user_id=self`\n    }).then(res => {\n      debugger;\n      dispatch({\n        type: RECEIVE_RIFF_LIST,\n        payload: res.data\n      });\n    }).catch(error => {\n      console.error(error);\n      dispatch({\n        type: RECEIVE_RIFF_LIST,\n        payload: []\n      });\n    });\n  };\n};\n\n//Delete Riff\nexport const deleteRiff = (riffID, video_id, websocket) => {\n  return dispatch => {\n    axios({\n      method: 'delete',\n      url: `/riff-remove/${riffID}`\n    }).then(res => {\n      dispatch({\n        type: DELETE_RIFF,\n        id: riffID\n      });\n\n      // websocket call\n      websocket.send(JSON.stringify({\n        type: 'update',\n        video_id\n      }));\n    }).catch(err => console.log(\"error\", err));\n  };\n};\n\n// perhaps this action should somehow call the above action (setVideoID)?\n\nexport const getRiffsMeta = videoID => {\n  return dispatch => {\n    axios({\n      method: 'get',\n      url: `/get-view-riffs/${videoID}`\n    }).then(res => {\n      dispatch({\n        type: RECEIVE_RIFF_META,\n        payload: res.data\n      });\n    }).catch(err => console.log(\"error\", err));\n  };\n};\nexport const getViewRiffs = videoID => {\n  return dispatch => {\n    axios({\n      method: 'get',\n      url: `/riffs?video_id=${videoID}`\n    }).then(res => {\n      dispatch({\n        type: RECEIVE_RIFF_LIST,\n        payload: res.data\n      });\n    }).catch(err => console.log(\"error\", err));\n  };\n};\nexport const getUserData = () => {\n  return dispatch => {\n    axios({\n      method: 'get',\n      url: '/get-user-data'\n    }).then(res => {\n      dispatch({\n        type: LOAD_USER_DATA,\n        payload: res.data\n      });\n    }).catch(err => console.log(\"error\", err));\n  };\n};\nexport const getPublicUserData = id => {\n  return dispatch => {\n    axios({\n      method: 'get',\n      url: `/get-user-data-by-id/${id}`\n    }).then(res => {\n      dispatch({\n        type: LOAD_PUBLIC_USER_DATA,\n        payload: res.data\n      });\n    }).catch(err => console.log(\"error\", err));\n  };\n};\nexport const getGlobalVideoList = () => {\n  return dispatch => {\n    axios({\n      method: 'get',\n      url: '/videos?host=www.youtube.com'\n    }).then(res => {\n      dispatch({\n        type: LOAD_GLOBAL_VIDEO_LIST,\n        payload: res.data\n      });\n    }).catch(err => console.log(\"error\", err));\n  };\n};\nexport const setPlayerMode = mode => ({\n  type: SET_PLAYER_MODE,\n  payload: mode\n});\nexport const togglePlayerMode = mode => ({\n  type: TOGGLE_PLAYER_MODE\n});\n\n/*export const saveRiff = payload => ({\n  type: SAVE_NEW_RIFF,\n  payload\n});*/\n\nexport const saveTempAudio = (payload, duration) => ({\n  type: SAVE_TEMP_AUDIO,\n  payload,\n  duration\n});\nexport const editRiff = (payload, id, load) => {\n  return dispatch => {\n    dispatch({\n      type: EDIT_RIFF,\n      payload,\n      // index\n      id\n    });\n\n    // id is only passed when the audio riff needs loading\n    if (load) rawLoadAxios(dispatch, id); // loads riff audio\n  };\n};\n\nexport const cancelEdit = () => ({\n  type: CANCEL_EDIT\n});\nexport const updateRiffTime = (token, start, video_id, riff_id, websocket) => {\n  return dispatch => {\n    axios({\n      method: 'post',\n      url: `/update-riff-time`,\n      data: {\n        token,\n        start,\n        id: riff_id\n      }\n    }).then(res => {\n      // res.data.data\n      dispatch({\n        type: UPDATE_RIFF_TIME_SUCCESS,\n        id: riff_id,\n        time: start\n      });\n      // websocket call\n      websocket.send(JSON.stringify({\n        type: 'update',\n        video_id: video_id\n      }));\n    }).catch(err => {\n      dispatch({\n        type: SAVE_NEW_RIFF_FAILURE,\n        payload: err.response\n      });\n    });\n\n    // dispatch NOTHING\n  };\n};\n\nexport const createTempRiff = function (type, videoID) {\n  let immediateRecord = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return {\n    type: type === 'audio' ? CREATE_TEMP_AUDIO_RIFF : CREATE_TEMP_TEXT_RIFF,\n    videoID,\n    immediateRecord\n  };\n};\nexport const setImmediateOn = () => ({\n  type: SET_IMMEDIATE_ON\n});\nexport const setImmediateOff = () => ({\n  type: SET_IMMEDIATE_OFF\n});\nexport const setRecorder = payload => ({\n  type: SET_RECORDER,\n  payload\n});\nexport const setRiffPlaying = (index, playing) => ({\n  type: playing ? SET_RIFF_PLAYING : SET_RIFF_NOT_PLAYING,\n  payload: index\n});\nexport const loadRiff = (id, load) => {\n  return dispatch => {\n    dispatch({\n      type: LOAD_RIFF,\n      payload: id\n    });\n    rawLoadAxios(dispatch, id);\n  };\n};\nconst rawLoadAxios = (dispatch, id) => {\n  axios({\n    method: 'get',\n    url: `/riffs/${id}`,\n    responseType: 'arraybuffer'\n  }).then(res => {\n    dispatch({\n      type: RIFF_LOADED,\n      payload: res.data,\n      id\n    });\n  }).catch(err => console.log(\"error\", err));\n};","map":{"version":3,"names":["axios","LOGIN","LOGOUT","CREATE_TEMP_AUDIO_RIFF","CREATE_TEMP_TEXT_RIFF","EDIT_RIFF","CANCEL_EDIT","SAVE_NEW_RIFF","SAVE_NEW_RIFF_SUCCESS","SAVE_NEW_RIFF_FAILURE","SAVE_EDIT_RIFF","SAVE_EDIT_RIFF_SUCCESS","SAVE_EDIT_RIFF_FAILURE","UPDATE_RIFF_TIME_SUCCESS","DELETE_RIFF","SAVE_TEMP_AUDIO","SET_RIFF_PLAYING","SET_RIFF_NOT_PLAYING","LOAD_RIFF","RIFF_LOADED","SET_PLAYER_MODE","EDIT_MODE","EDIT_NEW_MODE","PLAY_MODE","PAUSE_MODE","TOGGLE_PLAYER_MODE","SET_VIDEO_ID","RECEIVE_NAME_UPDATE","RECEIVE_RIFF_LIST","RECEIVE_RIFF_META","TOGGLE_VIEW_USERID_MUTED","SET_VIEW_USERID_MUTED","RECEIVE_COLLABORATION_ID","CREATE_PLAYLIST_SUCCESS","CREATE_PLAYLIST_FAILURE","SET_VIDEO_DURATION","LOAD_USER_DATA","LOAD_PUBLIC_USER_DATA","LOAD_PUBLIC_USER_NAME","LOAD_GLOBAL_VIDEO_LIST","SET_IMMEDIATE_OFF","SET_IMMEDIATE_ON","SET_RECORDER","WEB_SOCKET_UPDATE","SAVE_PIC_SUCCESS","SAVE_PIC_FAILURE","SET_ERROR","CLEAR_ERROR","login","email","password","dispatch","method","url","data","then","res","type","payload","catch","err","console","log","loginWithGoogle","credentialResponse","credentials","logout","currentUserStatus","saveNewRiff","detail","riff","fetch","id","body","response","json","saveEditRiff","setWebSocket","setVideoDuration","setRifferName","newName","setRiffPic","fd","FormData","append","headers","getRiffs","videoID","setVideoID","error","deleteRiff","riffID","video_id","websocket","send","JSON","stringify","getRiffsMeta","getViewRiffs","getUserData","getPublicUserData","getGlobalVideoList","setPlayerMode","mode","togglePlayerMode","saveTempAudio","duration","editRiff","load","rawLoadAxios","cancelEdit","updateRiffTime","token","start","riff_id","time","createTempRiff","immediateRecord","setImmediateOn","setImmediateOff","setRecorder","setRiffPlaying","index","playing","loadRiff","responseType"],"sources":["/Users/davidnewberry/Documents/test_rails/frontend/src/actions/index.js"],"sourcesContent":["import axios from 'axios';\n\nexport const LOGIN = 'LOGIN';\nexport const LOGOUT = 'LOGOUT';\n\nexport const CREATE_TEMP_AUDIO_RIFF = 'CREATE_TEMP_AUDIO_RIFF';\nexport const CREATE_TEMP_TEXT_RIFF = 'CREATE_TEMP_TEXT_RIFF';\n\nexport const EDIT_RIFF = 'EDIT_RIFF';\n\nexport const CANCEL_EDIT = 'CANCEL_EDIT';\nexport const SAVE_NEW_RIFF = 'SAVE_NEW_RIFF';\n\nexport const SAVE_NEW_RIFF_SUCCESS = 'SAVE_NEW_RIFF_SUCCESS';\nexport const SAVE_NEW_RIFF_FAILURE = 'SAVE_NEW_RIFF_FAILURE';\n\nexport const SAVE_EDIT_RIFF = 'SAVE_EDIT_RIFF';\n\nexport const SAVE_EDIT_RIFF_SUCCESS = 'SAVE_EDIT_RIFF_SUCCESS';\nexport const SAVE_EDIT_RIFF_FAILURE = 'SAVE_EDIT_RIFF_FAILURE';\n\nexport const UPDATE_RIFF_TIME_SUCCESS = 'UPDATE_RIFF_TIME_SUCCESS';\n\nexport const DELETE_RIFF = 'DELETE_RIFF';\n\nexport const SAVE_TEMP_AUDIO = 'SAVE_TEMP_AUDIO';\n\nexport const SET_RIFF_PLAYING = 'SET_RIFF_PLAYING';\nexport const SET_RIFF_NOT_PLAYING = 'SET_RIFF_NOT_PLAYING';\n\nexport const LOAD_RIFF = 'LOAD_RIFF';\nexport const RIFF_LOADED = 'RIFF_LOADED';\n\nexport const SET_PLAYER_MODE = 'SET_PLAYER_MODE';\nexport const EDIT_MODE = 'EDIT_MODE';\nexport const EDIT_NEW_MODE = 'EDIT_NEW_MODE';\nexport const PLAY_MODE = 'PLAY_MODE';\nexport const PAUSE_MODE = 'PAUSE_MODE';\nexport const TOGGLE_PLAYER_MODE = 'TOGGLE_PLAYER_MODE';\n\nexport const SET_VIDEO_ID = 'SET_VIDEO_ID';\nexport const RECEIVE_NAME_UPDATE = 'RECEIVE_NAME_UPDATE';\n\nexport const RECEIVE_RIFF_LIST = 'RECEIVE_RIFF_LIST';\nexport const RECEIVE_RIFF_META = 'RECEIVE_RIFF_META';\n\nexport const TOGGLE_VIEW_USERID_MUTED = 'TOGGLE_VIEW_USERID_MUTED';\nexport const SET_VIEW_USERID_MUTED = 'SET_VIEW_USERID_MUTED';\n\nexport const RECEIVE_COLLABORATION_ID = 'RECEIVE_COLLABORATION_ID';\nexport const CREATE_PLAYLIST_SUCCESS = 'START_COLLABORATION_SUCCESS';\nexport const CREATE_PLAYLIST_FAILURE = 'START_COLLABORATION_FAILURE';\n\nexport const SET_VIDEO_DURATION = 'SET_VIDEO_DURATION';\n\nexport const LOAD_USER_DATA = 'LOAD_USER_DATA';\nexport const LOAD_PUBLIC_USER_DATA = 'LOAD_PUBLIC_USER_DATA';\nexport const LOAD_PUBLIC_USER_NAME = 'LOAD_PUBLIC_USER_NAME';\nexport const LOAD_GLOBAL_VIDEO_LIST = 'LOAD_GLOBAL_VIDEO_LIST';\n\nexport const SET_IMMEDIATE_OFF = 'SET_IMMEDIATE_OFF';\nexport const SET_IMMEDIATE_ON = 'SET_IMMEDIATE_ON';\n\nexport const SET_RECORDER = 'SET_RECORDER';\n\nexport const WEB_SOCKET_UPDATE = 'WEB_SOCKET_UPDATE';\n\nexport const SAVE_PIC_SUCCESS = 'SAVE_PIC_SUCCESS';\nexport const SAVE_PIC_FAILURE = 'SAVE_PIC_FAILURE';\n\nexport const SET_ERROR = 'SET_ERROR';\nexport const CLEAR_ERROR = 'CLEAR_ERROR';\n\n/******** Login and logout */\n\nexport const login = (email, password) => {\n  return (dispatch) => {\n    axios({\n      method: 'post',\n      url: `/login`,\n      data: { email, password },\n    }).then((res) => {\n      //debugger;\n      dispatch({ type: LOGIN, payload: res.data });\n    }).catch(err =>\n      console.log(\"error\", err));\n  };\n};\n\nexport const loginWithGoogle = (credentialResponse) => {\n  console.log(credentialResponse);\n  //debugger;\n  return (dispatch) => {\n    axios({\n      method: 'post',\n      url: `/login-with-google`,\n      data: { credentials: credentialResponse },\n    }).then((res) => {\n      console.log(res);\n      dispatch({ type: LOGIN, payload: res.data });\n    }).catch(err => console.log(\"error\", err));\n  };\n};\n\nexport const logout = () => {\n  return (dispatch) => {\n    axios({\n      method: 'delete',\n      url: `/logout`,\n    }).then((res) => {\n      //debugger;\n      dispatch({ type: LOGOUT, payload: res.data });\n    }).catch(err =>\n      console.log(\"error\", err));\n  };\n};\n\nexport const currentUserStatus = () => {\n  return (dispatch) => {\n    axios({\n      method: 'get',\n      url: `/user-status`,\n    }).then((res) => {\n      //debugger;\n      dispatch({ type: LOGIN, payload: res.data });\n    }).catch(err =>\n      console.log(\"error\", err));\n  };\n};\n\n\n/********** Saving, editing  */\n\n\nexport const saveNewRiff = (detail) =>\n{\n  return (dispatch) =>\n  {\n    dispatch({ type: SAVE_EDIT_RIFF, payload: detail.payload, riff: detail });\n    fetch(`/riffs/${detail.id}`,\n      {\n        method: 'PATCH',\n        body: detail\n      })\n      .then(response => response.json())\n      .then(response => dispatch({ type: SAVE_EDIT_RIFF_SUCCESS, payload: response.data }))\n      .catch(err => dispatch({ type: SAVE_EDIT_RIFF_FAILURE, payload: err }));\n  }\n}\n\nexport const saveEditRiff = (detail) =>\n{\n  return (dispatch) =>\n  {\n    dispatch({ type: SAVE_NEW_RIFF, payload: detail.payload, riff: detail });\n    fetch(`/riffs`, \n      {\n        method: 'POST',\n        body: detail\n      })\n      .then(response => response.json())\n      .then(response => dispatch({ type: SAVE_NEW_RIFF_SUCCESS, payload: response.data }))\n      .catch(err => dispatch({ type: SAVE_NEW_RIFF_FAILURE, payload: err }));\n  }\n}\n\n\n/******** WebSockets */\n\nexport const setWebSocket = (payload) => ({\n  type: WEB_SOCKET_UPDATE,\n  payload,\n});\n\n/******** Editing Interface */\n\nexport const setVideoDuration = (payload) => ({\n  type: SET_VIDEO_DURATION,\n  payload,\n});\n\nexport const setRifferName = (newName) => {\n  return (dispatch) => {\n    axios({\n      method: 'post',\n      url: `/set-name`,\n      data: { newName },\n    }).then((res) => {\n      dispatch({ type: RECEIVE_NAME_UPDATE, payload: res.data });\n    }).catch(err => console.log(\"error\", err));\n  };\n};\n\nexport const setRiffPic = (payload) => {\n  return (dispatch) => {\n    let fd = new FormData();\n    fd.append('image', payload);\n    axios({\n      method: 'post',\n      url: `/save-pic`,\n      data: fd,\n      headers: { 'Content-Type': 'multipart/form-data' },\n    })\n      .then((res) => {\n        // res.data.data\n        dispatch({ type: SAVE_PIC_SUCCESS, payload: res.data }); // fix these to constants\n      })\n      .catch((err) => {\n        dispatch({ type: SAVE_PIC_FAILURE, payload: err.response });\n      });\n  };\n};\n\n// updated to use get\nexport const getRiffs = (videoID) => {\n  return (dispatch) => {\n    axios({\n      method: 'get',\n      url: `/riffs?video_id=${videoID}&user_id=self`,\n    }).then((res) => {\n      dispatch({ type: RECEIVE_RIFF_LIST, payload: res.data });\n    }).catch(err => console.log(\"error\", err));\n\n    axios({\n      method: 'get',\n      url: `/riffs?video_id=${videoID}`,\n    }).then((res) => {\n      dispatch({ type: RECEIVE_RIFF_META, payload: res.data });\n    }).catch(err => console.log(\"error\", err));\n  }\n};\n\nexport const setVideoID = (videoID) => {\n  return (dispatch) => {\n    dispatch({\n      type: SET_VIDEO_ID,\n      payload: videoID,\n    });\n    \n    axios({\n      method: 'get',\n      url: `/riffs?video_id=${videoID}`,\n    }).then((res) => {\n      dispatch({ type: RECEIVE_RIFF_META, payload: res.data });\n    }).catch(error => {\n      dispatch({ type: RECEIVE_RIFF_META, payload: [] });\n    });\n  \n    axios({\n      method: 'get',\n      url: `/riffs?video_id=${videoID}&user_id=self`,\n    }).then((res) => {\n      debugger;\n      dispatch({ type: RECEIVE_RIFF_LIST, payload: res.data });\n    }).catch(error => {\n      console.error(error);\n      dispatch({ type: RECEIVE_RIFF_LIST, payload: [] });\n    });\n    \n  };\n};\n\n//Delete Riff\nexport const deleteRiff = (riffID, video_id, websocket) => {\n  return (dispatch) => {\n    axios({\n      method: 'delete',\n      url: `/riff-remove/${riffID}`\n    }).then((res) => {\n      dispatch({ type: DELETE_RIFF, id: riffID });\n\n      // websocket call\n      websocket.send(JSON.stringify({ type: 'update', video_id }));\n    }).catch(err => console.log(\"error\", err));\n  };\n};\n\n// perhaps this action should somehow call the above action (setVideoID)?\n\n\nexport const getRiffsMeta = (videoID) => {\n  return (dispatch) => {\n    axios({\n      method: 'get',\n      url: `/get-view-riffs/${videoID}`,\n    }).then((res) => {\n      dispatch({ type: RECEIVE_RIFF_META, payload: res.data });\n    }).catch(err => console.log(\"error\", err));\n  };\n};\n\nexport const getViewRiffs = (videoID) => {\n  return (dispatch) => {\n    axios({\n      method: 'get',\n      url: `/riffs?video_id=${videoID}`,\n    }).then((res) => {\n      dispatch({ type: RECEIVE_RIFF_LIST, payload: res.data });\n    }).catch(err => console.log(\"error\", err));\n  };\n};\n\nexport const getUserData = () => {\n  return (dispatch) => {\n    axios({\n      method: 'get',\n      url: '/get-user-data',\n    }).then((res) => {\n      dispatch({ type: LOAD_USER_DATA, payload: res.data });\n    }).catch(err => console.log(\"error\", err));\n  };\n};\n\nexport const getPublicUserData = (id) => {\n  return (dispatch) => {\n    axios({\n      method: 'get',\n      url: `/get-user-data-by-id/${id}`,\n    }).then((res) => {\n      dispatch({ type: LOAD_PUBLIC_USER_DATA, payload: res.data });\n    }).catch(err => console.log(\"error\", err));\n  };\n};\n\nexport const getGlobalVideoList = () => {\n  return (dispatch) => {\n    axios({\n      method: 'get',\n      url: '/videos?host=www.youtube.com',\n    }).then((res) => {\n      dispatch({ type: LOAD_GLOBAL_VIDEO_LIST, payload: res.data });\n    }).catch(err => console.log(\"error\", err));\n  };\n};\n\nexport const setPlayerMode = (mode) => ({\n  type: SET_PLAYER_MODE,\n  payload: mode,\n});\n\nexport const togglePlayerMode = (mode) => ({\n  type: TOGGLE_PLAYER_MODE,\n});\n\n/*export const saveRiff = payload => ({\n  type: SAVE_NEW_RIFF,\n  payload\n});*/\n\nexport const saveTempAudio = (payload, duration) => ({\n  type: SAVE_TEMP_AUDIO,\n  payload,\n  duration,\n});\n\nexport const editRiff = (payload, id, load) => {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_RIFF,\n      payload, // index\n      id,\n    });\n\n    // id is only passed when the audio riff needs loading\n    if (load) rawLoadAxios(dispatch, id); // loads riff audio\n  };\n};\n\nexport const cancelEdit = () => ({\n  type: CANCEL_EDIT,\n});\n\nexport const updateRiffTime = (token, start, video_id, riff_id, websocket) => {\n  return (dispatch) => {\n    axios({\n      method: 'post',\n      url: `/update-riff-time`,\n      data: { token, start, id: riff_id },\n    })\n      .then((res) => {\n        // res.data.data\n        dispatch({ type: UPDATE_RIFF_TIME_SUCCESS, id: riff_id, time: start });\n        // websocket call\n        websocket.send(\n          JSON.stringify({ type: 'update', video_id: video_id })\n        );\n      })\n      .catch((err) => {\n        dispatch({ type: SAVE_NEW_RIFF_FAILURE, payload: err.response });\n      });\n\n    // dispatch NOTHING\n  };\n}\n\nexport const createTempRiff = (type, videoID, immediateRecord = false) => ({\n  type: type === 'audio' ? CREATE_TEMP_AUDIO_RIFF : CREATE_TEMP_TEXT_RIFF,\n  videoID,\n  immediateRecord,\n});\n\nexport const setImmediateOn = () => ({\n  type: SET_IMMEDIATE_ON,\n});\n\nexport const setImmediateOff = () => ({\n  type: SET_IMMEDIATE_OFF,\n});\n\nexport const setRecorder = (payload) => ({\n  type: SET_RECORDER,\n  payload,\n});\n\nexport const setRiffPlaying = (index, playing) => ({\n  type: playing ? SET_RIFF_PLAYING : SET_RIFF_NOT_PLAYING,\n  payload: index,\n});\n\nexport const loadRiff = (id, load) => {\n  return (dispatch) => {\n    dispatch({ type: LOAD_RIFF, payload: id });\n    rawLoadAxios(dispatch, id);\n  };\n};\n\nconst rawLoadAxios = (dispatch, id) => {\n  axios({\n    method: 'get',\n    url: `/riffs/${id}`,\n    responseType: 'arraybuffer',\n  }).then((res) => {\n    dispatch({ type: RIFF_LOADED, payload: res.data, id });\n  }).catch(err => console.log(\"error\", err));\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}