{"ast":null,"code":"import { SET_VIDEO_ID, EDIT_RIFF, SAVE_RIFF_SUCCESS, SAVE_RIFF, CREATE_TEMP_AUDIO_RIFF, CREATE_TEMP_TEXT_RIFF, RIFF_LOADED, SAVE_TEMP_AUDIO, CANCEL_EDIT, LOAD_RIFF } from '../actions/index.js';\nlet initialState = {\n  saving: {},\n  loading: {},\n  temp: null,\n  all: {},\n  editIndex: null\n};\nconst riffsAudioReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case CREATE_TEMP_AUDIO_RIFF:\n    case CREATE_TEMP_TEXT_RIFF:\n      return {\n        ...state,\n        editIndex: null\n      };\n    case SET_VIDEO_ID:\n      return initialState;\n    case EDIT_RIFF:\n      return {\n        ...state,\n        temp: state.all[action.id],\n        // copy specified riff audio to temp\n        editIndex: action.payload\n      };\n    case SAVE_RIFF_SUCCESS:\n      {\n        if (action.payload.type === 'add') {\n          const {\n            [action.payload.tempId]: foo,\n            ...saving\n          } = state.saving; // foo is discarded\n          return {\n            ...state,\n            saving,\n            all: {\n              ...state.all,\n              [action.payload.id]: state.temp\n            },\n            temp: null\n          };\n        } else return state;\n      }\n    case SAVE_RIFF:\n      {\n        // adding a new riff:\n        if (state.editIndex === null) return {\n          ...state,\n          saving: {\n            ...state.saving,\n            [action.riff.tempId]: true\n          },\n          editIndex: null\n        };\n        // EDIT_MODE (existing riff):\n        else return {\n          ...state,\n          all: {\n            ...state.all,\n            [action.riff.id]: action.payload.payload\n          },\n          editIndex: null,\n          temp: null\n        };\n      }\n    case LOAD_RIFF:\n      {\n        return {\n          ...state,\n          loading: {\n            ...state.loading,\n            [action.payload]: true\n          }\n        };\n      }\n    case RIFF_LOADED:\n      {\n        // unpack state.loading object, selecting (and discarding) the entry for the loaded riff's id\n        // the new loading var holds the loading object minus the loaded riff\n        const {\n          [action.id]: foo,\n          ...loading\n        } = state.loading; // foo is discarded\n        const audio = new Blob(new Array(action.payload), {\n          type: 'audio/mp3'\n        });\n        return {\n          ...state,\n          loading,\n          all: {\n            ...state.all,\n            [action.id]: audio\n          },\n          temp: state.editIndex === null ? null : audio\n        };\n      }\n    case SAVE_TEMP_AUDIO:\n      return {\n        ...state,\n        temp: action.payload\n      };\n    case CANCEL_EDIT:\n      return {\n        ...state,\n        temp: null,\n        editIndex: null\n      };\n    default:\n      return state;\n  }\n};\nexport default riffsAudioReducer;","map":{"version":3,"names":["SET_VIDEO_ID","EDIT_RIFF","SAVE_RIFF_SUCCESS","SAVE_RIFF","CREATE_TEMP_AUDIO_RIFF","CREATE_TEMP_TEXT_RIFF","RIFF_LOADED","SAVE_TEMP_AUDIO","CANCEL_EDIT","LOAD_RIFF","initialState","saving","loading","temp","all","editIndex","riffsAudioReducer","state","action","type","id","payload","tempId","foo","riff","audio","Blob","Array"],"sources":["/Users/davidnewberry/Documents/test_rails/frontend/src/reducers/riffsAudio-reducer.js"],"sourcesContent":["import {\n  SET_VIDEO_ID,\n  EDIT_RIFF,\n  SAVE_RIFF_SUCCESS,\n  SAVE_RIFF,\n  CREATE_TEMP_AUDIO_RIFF,\n  CREATE_TEMP_TEXT_RIFF,\n  RIFF_LOADED,\n  SAVE_TEMP_AUDIO,\n  CANCEL_EDIT,\n  LOAD_RIFF,\n} from '../actions/index.js';\n\nlet initialState = { saving: {}, loading: {}, temp: null, all: {}, editIndex: null };\n\nconst riffsAudioReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CREATE_TEMP_AUDIO_RIFF:\n    case CREATE_TEMP_TEXT_RIFF:\n      return { ...state, editIndex: null };\n    case SET_VIDEO_ID:\n      return initialState;\n    case EDIT_RIFF:\n      return {\n        ...state,\n        temp: state.all[action.id], // copy specified riff audio to temp\n        editIndex: action.payload\n      };\n    case SAVE_RIFF_SUCCESS: {\n      if (action.payload.type === 'add') {\n        const { [action.payload.tempId]: foo, ...saving } = state.saving; // foo is discarded\n        return {\n          ...state,\n          saving,\n          all: {\n            ...state.all,\n            [action.payload.id]: state.temp,\n          },\n          temp: null,\n        };\n      } else return state;\n    }\n    case SAVE_RIFF: {\n      // adding a new riff:\n      if (state.editIndex === null)\n        return {\n          ...state,\n          saving: {\n            ...state.saving,\n            [action.riff.tempId]: true,\n          },\n          editIndex: null,\n        };\n      // EDIT_MODE (existing riff):\n      else\n        return {\n          ...state,\n          all: {\n            ...state.all,\n            [action.riff.id]: action.payload.payload,\n          },\n          editIndex: null,\n          temp: null,\n        };\n    }\n    case LOAD_RIFF: {\n      return {\n        ...state,\n        loading: {\n          ...state.loading,\n          [action.payload]: true,\n        },\n      };\n    }\n    case RIFF_LOADED: {\n      // unpack state.loading object, selecting (and discarding) the entry for the loaded riff's id\n      // the new loading var holds the loading object minus the loaded riff\n      const { [action.id]: foo, ...loading } = state.loading; // foo is discarded\n      const audio = new Blob(new Array(action.payload), {\n            type: 'audio/mp3',\n          });\n      return {\n        ...state,\n        loading,\n        all: {\n          ...state.all,\n          [action.id]: audio\n        },\n        temp: state.editIndex === null ? null : audio,\n      };\n    }\n    case SAVE_TEMP_AUDIO:\n      return {\n        ...state,\n        temp: action.payload,\n      };\n    case CANCEL_EDIT:\n      return {\n        ...state,\n        temp: null,\n        editIndex: null,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default riffsAudioReducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}